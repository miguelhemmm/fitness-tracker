{"version":3,"sources":["./src/app/training/current-training/current-training.component.ts","./src/app/training/current-training/current-training.component.html","./src/app/training/current-training/stop-training-dialog.component.ts","./src/app/training/new-training/new-training.component.ts","./src/app/training/new-training/new-training.component.html","./src/app/training/past-trainings/past-trainings.component.ts","./src/app/training/past-trainings/past-trainings.component.html","./src/app/training/training-routing.module.ts","./src/app/training/training.component.ts","./src/app/training/training.component.html","./src/app/training/training.module.ts"],"names":[],"mappings":"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","file":"training-training-module.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { StopTrainingComponent } from './stop-training-dialog.component';\nimport { TrainingService } from '../training.service';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Exercise } from '../exercise.model';\nimport { Store } from '@ngrx/store';\nimport * as fromTraining from 'src/app/training/training.reducer';\n\n@Component({\n  selector: 'app-current-training',\n  templateUrl: './current-training.component.html',\n  styleUrls: ['./current-training.component.scss']\n})\nexport class CurrentTrainingComponent implements OnInit {\n@Output() trainingExit = new EventEmitter();\nprogress = 0;\ntimer;\nselectedExercise: Exercise;\n\n  constructor(private dialog: MatDialog, private trainingService: TrainingService, private store$: Store<fromTraining.State>) { }\n\n  ngOnInit() {\n    this.store$.select(fromTraining.getActiveTraining).pipe(take(1)).subscribe(availableTraining => {\n      this.selectedExercise = availableTraining;\n    })\n    this.startResumeTimer();\n  }\n\n startResumeTimer() {\n  const step = this.selectedExercise.duration / 100 * 1000;\n  this.timer = setInterval(() => {\n    this.progress += 1;\n    if (this.progress >= 100) {\n      this.trainingService.completedExercise();\n      clearInterval(this.timer);\n      }\n    }, step);\n }\n\n  stopExercise() {\n    clearInterval(this.timer);\n    const dialogRef = this.dialog.open(StopTrainingComponent, {data: {\n      progress: this.progress\n      }\n    });\n    dialogRef.afterClosed().subscribe(data => {\n    data ? this.trainingService.cancelledExercise(this.progress) : this.startResumeTimer();\n    });\n  }\n\n  setButtonName() {\n    return this.progress === 100 ? 'Return' : 'Stop';\n  }\n}\n","<section fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"mt-5\">\n<mat-progress-spinner color=\"primary\" mode=\"determinate\" [value]=\"progress\"></mat-progress-spinner>\n<h1>Progress</h1>\n{{progress}}%\n<p>Keep up with the good work!</p>\n<button (click)=\"stopExercise()\" mat-raised-button color=\"accent\">{{setButtonName()}}</button>\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-stop-training',\n  template: `\n  <h1 mat-dialog-title>Do you want to stop?</h1>\n    <mat-dialog-content>\n      <p>Your already got {{ passedData.progress }}%, do you want to proceed?</p>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n      <button mat-raised-button [mat-dialog-close]=\"true\" color=\"primary\">Yes</button>\n      <button mat-raised-button [mat-dialog-close]=\"false\" color=\"warning\">No</button>\n    </mat-dialog-actions> `\n\n})\nexport class StopTrainingComponent {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public passedData: any) {}\n\n}\n","import { NgForm } from '@angular/forms';\nimport { Component, OnInit, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { TrainingService } from '../training.service';\nimport { Exercise } from '../exercise.model';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { take } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { UIServiceService } from 'src/app/shared/ui-service.service';\nimport * as fromTraining from 'src/app/training/training.reducer';\nimport * as fromApp from 'src/app/app.reducer';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-new-training',\n  templateUrl: './new-training.component.html',\n  styleUrls: ['./new-training.component.scss']\n})\nexport class NewTrainingComponent implements OnInit{\n\nexercises: Exercise[];\nisLoading: boolean;\n\n  constructor(\n    private trainingService: TrainingService,\n    private database: AngularFirestore,\n    private uiService: UIServiceService,\n    private store$: Store<fromTraining.State>) { }\n\n  ngOnInit() {\n    this.store$.select(fromApp.getisLoading).subscribe(isloading => this.isLoading = isloading);\n    this.store$.select(fromTraining.getAvailableExercises).subscribe((data: Exercise[]) => {\n    this.exercises = data;\n    });\n    this.fetchAgain();\n  }\n onStartTraining(form: NgForm) {\n  this.trainingService.startExercise(form.value.pose);\n  }\n\n  fetchAgain() {\n    this.trainingService.fetchAvailableExercises();\n  }\n\n}\n","<section class=\"new-training mt-5\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onStartTraining(f)\">\n    <mat-card fxFlex=\"400px\">\n      <mat-card-header fxLayoutAlign=\"center\">\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>Time to start your routine!</mat-card-title>\n      <mat-card-subtitle>Select your position</mat-card-subtitle>\n      </mat-card-header>\n        <mat-card-content fxLayoutAlign=\"center\">\n          <mat-form-field class=\"mt-2\" *ngIf=\"!isLoading && exercises\"  appearance=\"outline\" >\n            <mat-label>Exercise</mat-label>\n            <mat-select ngModel name=\"pose\" required>\n            <mat-option *ngFor=\"let exercise of exercises\" [value]=\"exercise.id\">{{exercise.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n            <mat-spinner *ngIf=\"isLoading\" color=\"accent\"></mat-spinner>\n    </mat-card-content>\n    <mat-card-actions *ngIf=\"!isLoading\" fxLayoutAlign=\"center\">\n      <button *ngIf=\"!exercises\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"fetchAgain()\">Try Again</button>\n      <button *ngIf=\"exercises\" type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"f.invalid\">Start</button>\n    </mat-card-actions>\n    </mat-card>\n  </form>\n</section>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Exercise } from '../exercise.model';\nimport { TrainingService } from '../training.service';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport * as fromTraining from '../training.reducer';\n\n@Component({\n  selector: 'app-past-trainings',\n  templateUrl: './past-trainings.component.html',\n  styleUrls: ['./past-trainings.component.scss']\n})\nexport class PastTrainingsComponent implements OnInit, AfterViewInit {\n\n@ViewChild(MatSort) sort: MatSort;\n@ViewChild(MatPaginator) paginator: MatPaginator;\n\ndisplayedColumns: string[] = ['name', 'duration', 'calories', 'date', 'state'];\ndataSource = new MatTableDataSource<Exercise>();\n\n  constructor(private trainingService: TrainingService, private store$: Store<fromTraining.State>) { }\n\n  ngOnInit() {\n  this.store$.select(fromTraining.getFinishedExercises).subscribe((exercises: Exercise[]) => {\n    this.dataSource.data = exercises;\n  });\n  this.trainingService.fetchCompletedOrCancelled();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onFilter(value: string) {\n    this.dataSource.filter = value.trim().toLowerCase();\n  }\n\n}\n","<div fxLayoutAlign=\"center center\">\n  <mat-form-field fxFlex=\"40%\">\n    <input type=\"text\" matInput (keyup)=\"onFilter($event.target.value)\" placeholder=\"filter\">\n  </mat-form-field>\n</div>\n\n\n<mat-table [dataSource]=\"dataSource\" matSort>\n  <ng-container matColumnDef=\"name\">\n    <mat-header-cell *matHeaderCellDef> Name</mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"duration\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Duration </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.duration | number}} </mat-cell>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"calories\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Calories </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.calories | number }} </mat-cell>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"date\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Date </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.date}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"state\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> State </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.state}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n\n<mat-paginator\n  [pageSize]=\"5\"\n  [pageSizeOptions]=\"[5, 10, 25, 50]\">\n</mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrainingComponent } from './training.component';\n\n\nconst routes: Routes = [\n  {path: '', component: TrainingComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TrainingRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TrainingService } from './training.service';\nimport { Subscription } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport * as fromTraining from '../training/training.reducer';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.scss']\n})\nexport class TrainingComponent implements OnInit{\n\nongoingTraining: boolean;\n\n  constructor(private trainingService: TrainingService, private store$: Store<fromTraining.State>) { }\n\n  ngOnInit() {\n    this.store$.select(fromTraining.getIsTraining).subscribe(exercise => {\n      exercise ? this.ongoingTraining = true : this.ongoingTraining = false;\n    });\n  };\n\n\n}\n","<mat-tab-group *ngIf=\"!ongoingTraining\">\n  <mat-tab label=\"New Routine\"> <app-new-training></app-new-training> </mat-tab>\n  <mat-tab label=\"Past Routines\"> <app-past-trainings></app-past-trainings> </mat-tab>\n</mat-tab-group>\n<app-current-training *ngIf=\"ongoingTraining\"></app-current-training>\n","import { PastTrainingsComponent } from './past-trainings/past-trainings.component';\nimport { NewTrainingComponent } from './new-training/new-training.component';\nimport { CurrentTrainingComponent } from './current-training/current-training.component';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrainingComponent } from './training.component';\nimport { StopTrainingComponent } from './current-training/stop-training-dialog.component';\nimport { MaterialModule } from '../material/material.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TrainingRoutingModule } from './training-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport { trainingReducer } from '../training/training.reducer';\n\n\n\n@NgModule({\n  declarations: [\n    TrainingComponent,\n    CurrentTrainingComponent,\n    NewTrainingComponent,\n    PastTrainingsComponent,\n    StopTrainingComponent\n  ],\n  imports: [\n    MaterialModule,\n    SharedModule,\n    TrainingRoutingModule,\n    StoreModule.forFeature('training', trainingReducer)\n  ],\n  exports: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TrainingModule { }\n"],"sourceRoot":"webpack:///"}